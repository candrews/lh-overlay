
# should work if suitably edited for Linux, Irix, Solaris, OSX

# the C compiler
CC = cc

# compiler flags


MALLOC_FLAG = -DDO_NOT_HAVE_MALLOC
# use below for everything with malloc.h
#MALLOC_FLAG = 
# use below for everything without malloc.h (e.g. OSX)
#MALLOC_FLAG = -DDO_NOT_HAVE_MALLOC

FPIC_FLAG = -fPIC
# use below for everything with -fPIC option (e.g. gcc)
#FPIC_FLAG = -fPIC
# use below for everything without -fPIC option
#FPIC_FLAG = 

CFLAGS = -O $(MALLOC_FLAG) $(FPIC_FLAG)


# specify whether or not you want to compile GL
IGNORE_GL_FLAG = -DIGNORE_GL
# use below if you want to compile GL
#IGNORE_GL_FLAG =
# use below if you want to ignore GL
#IGNORE_GL_FLAG = -DIGNORE_GL

# special GL flag, should have either USE_GL_TRUE or USE_GL_FALSE
# (-D means this gets defined by the compiler so can be checked in source code)
# (this relates to glXCreateContext() call in ccpnmr/global/gl_handler.c)
# if have problems with USE_GL_TRUE then try GL_FALSE, or vice versa
GL_FLAG = -DUSE_GL_FALSE
# use below for Linux?
#GL_FLAG = -DUSE_GL_FALSE
# use below for everything else?
#GL_FLAG = -DUSE_GL_TRUE

GLUT_NEED_INIT = 
# use below if your glut does not need to be explicitly initialised
#GLUT_NEED_INIT =
# use below if your glut needs to be explicitly initialised
#GLUT_NEED_INIT = -DNEED_GLUT_INIT

GLUT_NOT_IN_GL = 
# whether glut.h is GL/glut.h (normal case) or just glut.h (OSX)
# use below if glut.h is in GL directory
#GLUT_NOT_IN_GL =
# use below if glut.h is not in GL directory (e.g. OSX)
#GLUT_NOT_IN_GL = -DGLUT_IN_OWN_DIR

# special glut flag
GLUT_FLAG = $(GLUT_NEED_INIT) $(GLUT_NOT_IN_GL)


# shared library flags
SHARED_FLAGS = -shared
# use below for Linux or Irix
#SHARED_FLAGS = -shared
# use below for OSX (assuming python executable is /sw/bin/python)
#SHARED_FLAGS = -L/sw/lib -bundle -bundle_loader /sw/bin/python
# use below for Solaris
#SHARED_FLAGS = -G


# math
MATH_LIB = -lm


# X11
X11_DIR = /usr
# use below for everything but Irix
#X11_DIR = /usr/X11R6
# use below for Irix
#X11_DIR = /usr
X11_LIB = -lX11 -lXext
X11_INCLUDE_FLAGS = -I$(X11_DIR)/include
X11_LIB_FLAGS = -L$(X11_DIR)/lib
# use below for 32 bit except on Irix
#X11_LIB_FLAGS = -L$(X11_DIR)/lib
# use below for 32 bit on Irix
#X11_LIB_FLAGS = -L$(X11_DIR)/lib32
# use below for 64 bit (not OSX?)
#X11_LIB_FLAGS = -L$(X11_DIR)/lib64


# Tcl
TCL_DIR = /usr
TCL_LIB = -ltcl8.4
TCL_INCLUDE_FLAGS = -I$(TCL_DIR)/include
TCL_LIB_FLAGS = -L$(TCL_DIR)/lib


# Tk
TK_DIR = /usr
TK_LIB = -ltk8.4
TK_INCLUDE_FLAGS = -I$(TK_DIR)/include
TK_LIB_FLAGS = -L$(TK_DIR)/lib


# Python
PYTHON_DIR = /usr
PYTHON_INCLUDE_FLAGS = -I$(PYTHON_DIR)/include/python2.5


# GL
#GL_DIR = 
#GL_LIB = -lglut -lGLU -lGL
# use below if compiling GL, except on OSX
#GL_LIB = -lglut -lGLU -lGL
# use below if compiling GL on OSX
#GL_LIB = -framework GLUT -lGLU -lGL
# use below if not compiling GL (or comment out GL_LIB line)
#GL_LIB =
# set GL_INCLUDE_FLAGS and GL_LIB_FLAGS if compiling GL
#GL_INCLUDE_FLAGS = -I$(GL_DIR)/ 
#GL_LIB_FLAGS = -L$(GL_DIR)/ 
# use below if compiling GL, except on OSX
#GL_INCLUDE_FLAGS = -I$(GL_DIR)/include
# use below if compiling GL on OSX
#GL_INCLUDE_FLAGS = -I$(GL_DIR)/include -I/System/Library/Frameworks/GLUT.framework/Headers
# use below if not compiling GL
#GL_INCLUDE_FLAGS =
# use below if compiling GL for everything 32 bit but Irix and OSX
#GL_LIB_FLAGS = -L$(GL_DIR)/lib
# use below for OSX
#GL_LIB_FLAGS = -L$(GL_DIR)/lib -framework GLUT
# use below for 32 bit Irix
#GL_LIB_FLAGS = -L$(GL_DIR)/lib32
# use below for 64 bit (not on OSX?)
#GL_LIB_FLAGS = -L$(GL_DIR)/lib64
# use below if not compiling GL (or comment out GL_LIB_FLAGS line)
#GL_LIB_FLAGS =
