#--- src/lib/modules/shx/shxmalloc.cpp.orig	2008-11-07 11:41:35.000000000 +0100
#+++ src/lib/modules/shx/shxmalloc.cpp	2008-11-07 11:41:43.000000000 +0100
#@@ -15,6 +15,7 @@
#  ***************************************************************************/
 
# #include <vector>
#+#include <cstdlib>
# 
# using namespace std;
# 
#--- ./include/almost/forcefield/spec.h.orig	2008-11-07 11:57:47.000000000 +0100
#+++ ./include/almost/forcefield/spec.h	2008-11-07 11:58:35.000000000 +0100
#@@ -20,6 +20,7 @@
# #define __SPEC__
# 
# #include <almost.h>
#+#include <typeinfo>
# namespace Almost {
# 
#   struct None{};
--- include/almost/cheshire/pssi.h.orig	2008-11-07 12:47:11.000000000 +0100
+++ include/almost/cheshire/pssi.h	2008-11-07 12:47:24.000000000 +0100
@@ -22,6 +22,7 @@
 #include <almost.h>
 #include <sstream>
 #include <iterator>
+#include <cstring>
 namespace Almost {
 
   class PSSI {
--- src/lib/algorithm/topos.cpp.orig	2008-11-07 13:18:10.000000000 +0100
+++ src/lib/algorithm/topos.cpp	2008-11-07 13:18:27.000000000 +0100
@@ -27,6 +27,7 @@
 #include <cmath>
 #include <cheshire/topos.h>
 #include <cheshire/topos_rc.h>
+#include <cstring>
 namespace Almost {
 
   namespace Topos {
--- include/almost/rose/rosedb.h.orig	2008-11-07 12:26:56.000000000 +0100
+++ include/almost/rose/rosedb.h	2008-11-07 12:27:04.000000000 +0100
@@ -21,6 +21,7 @@
 
 #include <almost.h>
 #include <iterator>
+#include <cstring>
 
 namespace Utils {
   inline int toinda(char c){
--- src/lib/zeta/zobj.cpp	2008-07-22 01:31:34.000000000 +0200
+++ src/lib/zeta/zobj.cpp.new	2008-11-23 19:19:26.000000000 +0100
@@ -2,6 +2,7 @@
 #include <zeta/zobj.h>
 #include <zeta/zobj.hpp>
 #include <zeta/zextinstance.h>
+#include <cstring>
 
 
 ZObj * FactoryTrampolin::bind(ZObj * o){ 
